import{_ as c,c as i,a as s,d as e,e as a,b as p,f as u,r as l,o as k}from"./app-lSJJfXGm.js";const r="/assets/1-npbNsDYy.png",d={},b={class:"custom-container tip"},m={href:"https://pan.baidu.com/s/1mDveJsMRVcKkRh9YlfUt8g?pwd=eppn",target:"_blank",rel:"noopener noreferrer"},v={href:"https://pan.baidu.com/s/1IybP1cKGm1_Mo1thL00uWQ?pwd=mnxg",target:"_blank",rel:"noopener noreferrer"},g={href:"https://pan.baidu.com/s/1mDveJsMRVcKkRh9YlfUt8g?pwd=eppn",target:"_blank",rel:"noopener noreferrer"},w={href:"https://pan.baidu.com/s/1IybP1cKGm1_Mo1thL00uWQ?pwd=mnxg",target:"_blank",rel:"noopener noreferrer"};function f(x,n){const o=l("RouteLink"),t=l("ExternalLinkIcon");return k(),i("div",null,[n[23]||(n[23]=s("h1",{id:"将exagear直装版数据包放到apk的assets中以减小体积安装后的占用空间",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#将exagear直装版数据包放到apk的assets中以减小体积安装后的占用空间"},[s("span",null,"将Exagear直装版数据包放到apk的assets中以减小体积安装后的占用空间")])],-1)),s("div",b,[n[3]||(n[3]=e('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p>',2)),s("p",null,[n[1]||(n[1]=a("若只想知道怎么操作，请从")),p(o,{to:"/blogs/2022/summer/exagearObbInApk/#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88"},{default:u(()=>n[0]||(n[0]=[a("解决方案")])),_:1}),n[2]||(n[2]=a("开始看"))])]),n[24]||(n[24]=e(`<h2 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述"><span>问题描述</span></a></h2><ul><li>目前的exagear直装版是将数据包放到了apk的lib目录中命名为libres.so，由于apk在安装后会将自身lib文件全部解压到<code>/data/data/包名/lib</code>目录下，所以在读取数据包时将数据包路径改成libres.so所在路径即可。</li><li>缺点：解压后的libres.so会一直保存，相比于纯apk+外置obb的做法，使用libres.so的体积=纯apk体积+obb体积+obb体积。</li><li>更改：将数据包放到apk的assets目录中，由于apk不会主动解压assets目录下的文件，可以减少一份obb的体积。</li></ul><h2 id="解决过程" tabindex="-1"><a class="header-anchor" href="#解决过程"><span>解决过程</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">整体流程</p><p>一开始的想法：</p><ol><li>反编译dex，在其中找到读取obb的代码</li><li>修改其中的obb路径</li></ol><hr><p>然后发现代码中接收的是数据包的File对象，而通过<code>getAssets().open()</code>获取到apk/assets的obb只有InputStream形式的。查阅资料发现<code>getAssets().openFd()</code>获取到的AssetFileDescriptor可以获取File，不过要求存储的文件不能压缩。想了想还是用open吧。那么就要</p><ol><li>先将obb从assets提取出来</li><li>提供给应用供其读取</li><li>读取完了再把解压出来的obb删掉</li></ol><p>不是很完美不过也凑活=-=</p></div><ol><li><p>用jadx反编译dex，搜索字符串<code>.obb</code>，发现读取obb文件的函数为<code>ZipInstallerObb.findObbFile() File</code>。这个函数要求返回一个数据包的File对象<br> 再看它被调用的地方：同一个类下的<code>installImageFromObbIfNeeded()</code>，File对象交给<code>findObbFile</code>，通过<code>checkObbUnpackNeed</code>判断数据包是否需要解压。\\</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">installImageFromObbIfNeeded</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">final</span> <span class="token class-name">File</span> findObbFile <span class="token operator">=</span> <span class="token function">findObbFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">boolean</span> checkObbUnpackNeed <span class="token operator">=</span> <span class="token function">checkObbUnpackNeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">final</span> <span class="token class-name">File</span> path <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>exagearImage<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>checkObbUnpackNeed<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">unpackingCompleted</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>findObbFile <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">noObbFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">AsyncTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>我们读取apk里assets文件夹下的文件，通过<code>context.getAssets().open(路径) InputStream</code>获取，只能获取到输入流。通过<code>context.getAssets().openFd() AssetFileDescriptor</code>获取，可以得到对应的File对象，但是要求文件不能压缩。<br> 这里我选择获取输入流。那么就要把输入流转为对象，再交给<code>findObbFile</code>。<br> 处理方式为读取apk/assets/obb文件夹中的唯一一个文件作为数据包，先将文件写入/data/data/包名/files文件夹，再将写入后的文件的File对象返回。</p><details class="custom-container details"><summary class="custom-container-title">点击展开代码</summary><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token class-name">File</span> <span class="token function">setTmpObb</span><span class="token punctuation">(</span><span class="token class-name">Context</span> ctx<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;exagear&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;setTmpObb: 进入生成临时数据包的函数 &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">File</span> destDir <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getFilesDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>destDir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">boolean</span> b <span class="token operator">=</span> destDir<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">assert</span> b<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getAssets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token string">&quot;obb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//如果目录下没有文件或者多个文件，返回null，让exagear显示报错</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//获取asstes的inputstream</span></span>
<span class="line">        <span class="token class-name">InputStream</span> is <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getAssets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token string">&quot;obb/&quot;</span> <span class="token operator">+</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//复制到files文件夹</span></span>
<span class="line"><span class="token comment">//        File.createTempFile(&quot;exa&quot;,&quot;obb&quot;,destDir);</span></span>
<span class="line">        <span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>destDir<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建新文件</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//如果已经存在（一般不会，但是如果在第一次解压的时候强制关掉的话，第二次启动）</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>newFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">boolean</span> b <span class="token operator">=</span> newFile<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">assert</span> b<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">//vm正常关闭（程序退出时）会删掉此文件。</span></span>
<span class="line">        newFile<span class="token punctuation">.</span><span class="token function">deleteOnExit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//创建该文件</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newFile<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>newFile<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">//新文件输出流</span></span>
<span class="line">        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">4096</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        fos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        is<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> newFile<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;Exagear&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;setTempObbFile: 出错：&quot;</span><span class="token operator">+</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">throw</span> e<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>files里的obb用完后应该删除。</p><details class="custom-container details"><summary class="custom-container-title">点击展开代码</summary><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delTmpObb</span><span class="token punctuation">(</span><span class="token class-name">Context</span> ctx<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;exagear&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;setTempObbFile: 进入删除临时数据包的函数 &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">File</span> destDir <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getFilesDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getAssets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token string">&quot;obb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>destDir<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建新文件</span></span>
<span class="line">            <span class="token comment">//如果存在，就删除</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>newFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">boolean</span> b <span class="token operator">=</span> newFile<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">assert</span> b<span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;Exagear&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;delTmpObb: 出错：&quot;</span><span class="token operator">+</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></li></ol><hr><ol start="3"><li>观察installImageFromObbIfNeeded()函数，稍微修改其逻辑。先设置findObbFile为null，借助checkObbUnpackNeed判断是否需要，如果真的需要再将obb移动出来并返回File，否则每次启动模拟器都移动一遍；如果不需要，检查移动出来的obb是否存在并删除。注意传入参数的context，是ZipInstallerObb的成员变量<code>private final Context context; </code>。<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">installImageFromObbIfNeeded</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    <span class="token keyword">final</span> <span class="token class-name">File</span> findObbFile <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">boolean</span> checkObbUnpackNeed <span class="token operator">=</span> <span class="token function">checkObbUnpackNeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token keyword">if</span><span class="token punctuation">(</span>checkObbUnpackNeed<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line highlighted">        findObbFile <span class="token operator">=</span> <span class="token class-name">ExagearPrefs</span><span class="token punctuation">.</span><span class="token function">setTmpObb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token class-name">ExagearPrefs</span><span class="token punctuation">.</span><span class="token function">delTmpObb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">final</span> <span class="token class-name">File</span> path <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>exagearImage<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>checkObbUnpackNeed<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">unpackingCompleted</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>findObbFile <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">noObbFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">AsyncTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>将数据包放入apk/assets/obb文件夹中，测试代码正常执行。</li></ol>`,7)),s("p",null,[n[6]||(n[6]=s("span",{id:"smali修改"},null,-1)),n[7]||(n[7]=a(" 5. 将java代码转为smali，将")),s("a",m,[n[4]||(n[4]=a("ExagearPrefs.smali")),p(t)]),n[8]||(n[8]=a("导入dex，并且修改ZipInstallerObb.smali中installImageFromObbIfNeeded的开头部分。如果手动改smali很麻烦，这里提供一份完整的")),s("a",v,[n[5]||(n[5]=a("ZipInstallerObb.smali")),p(t)]),n[9]||(n[9]=a("， 应该可以直接导入替换。但是不确定不同版本的exagear 这个smali的代码是否通用。"))]),n[25]||(n[25]=e(`<div class="language-smali line-numbers-mode" data-highlighter="prismjs" data-ext="smali" data-title="smali"><pre><code><span class="line"><span class="token comment"># virtual methods</span></span>
<span class="line"><span class="token keyword">.method</span> <span class="token keyword">public</span> <span class="token function">installImageFromObbIfNeeded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">V</span></span>
<span class="line">    <span class="token keyword">.registers</span> <span class="token number">4</span></span>
<span class="line">    <span class="token keyword">.annotation</span> <span class="token keyword">system</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">dalvik<span class="token punctuation">/</span>annotation<span class="token punctuation">/</span></span><span class="token class-name">Throws</span></span><span class="token punctuation">;</span></span>
<span class="line">        value <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">java<span class="token punctuation">/</span>io<span class="token punctuation">/</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">.end</span> <span class="token keyword">annotation</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">.line</span> <span class="token number">129</span></span>
<span class="line">    <span class="token comment">#v0作为findObbFile，先设为null</span></span>
<span class="line">    const/4 <span class="token register variable">v0</span><span class="token punctuation">,</span> <span class="token number">0x0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">.line</span> <span class="token number">130</span></span>
<span class="line">    invoke-direct <span class="token punctuation">{</span><span class="token register variable">p0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>eltechs<span class="token punctuation">/</span>axs<span class="token punctuation">/</span>helpers<span class="token punctuation">/</span></span><span class="token class-name">ZipInstallerObb</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token function">checkObbUnpackNeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">Z</span></span>
<span class="line"></span>
<span class="line">    move-result <span class="token register variable">v1</span></span>
<span class="line">    <span class="token comment">#判断需要解压obb时，再获取obb</span></span>
<span class="line">    if-eqz <span class="token register variable">v1</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token label property">cond_e</span></span>
<span class="line">    <span class="token comment">#获取自身context放入v2, 作为参数传递</span></span>
<span class="line">    iget-object <span class="token register variable">v2</span><span class="token punctuation">,</span> <span class="token register variable">p0</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>eltechs<span class="token punctuation">/</span>axs<span class="token punctuation">/</span>helpers<span class="token punctuation">/</span></span><span class="token class-name">ZipInstallerObb</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token field variable">context</span><span class="token punctuation">:</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">android<span class="token punctuation">/</span>content<span class="token punctuation">/</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    invoke-static <span class="token punctuation">{</span><span class="token register variable">v2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>example<span class="token punctuation">/</span>datainsert<span class="token punctuation">/</span></span><span class="token class-name">ExagearPrefs</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token function">setTmpObb</span><span class="token punctuation">(</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">android<span class="token punctuation">/</span>content<span class="token punctuation">/</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">java<span class="token punctuation">/</span>io<span class="token punctuation">/</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    move-result-object <span class="token register variable">v0</span></span>
<span class="line">    <span class="token comment">#分支执行完跳转</span></span>
<span class="line">    goto <span class="token punctuation">:</span><span class="token label property">goto_13</span></span>
<span class="line">    <span class="token comment">#如果不需要解压，检查是否需要删除临时obb</span></span>
<span class="line">    <span class="token punctuation">:</span><span class="token label property">cond_e</span></span>
<span class="line">    iget-object <span class="token register variable">v2</span><span class="token punctuation">,</span> <span class="token register variable">p0</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>eltechs<span class="token punctuation">/</span>axs<span class="token punctuation">/</span>helpers<span class="token punctuation">/</span></span><span class="token class-name">ZipInstallerObb</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token field variable">context</span><span class="token punctuation">:</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">android<span class="token punctuation">/</span>content<span class="token punctuation">/</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    invoke-static <span class="token punctuation">{</span><span class="token register variable">v2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>example<span class="token punctuation">/</span>datainsert<span class="token punctuation">/</span></span><span class="token class-name">ExagearPrefs</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token function">delTmpObb</span><span class="token punctuation">(</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">android<span class="token punctuation">/</span>content<span class="token punctuation">/</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token builtin">V</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">.line</span> <span class="token number">132</span></span>
<span class="line">    </span>
<span class="line">    <span class="token punctuation">:</span><span class="token label property">goto_13</span></span>
<span class="line">    <span class="token comment">#下面开始和原始函数一样了</span></span>
<span class="line">    </span>
<span class="line">    iget-object <span class="token register variable">v2</span><span class="token punctuation">,</span> <span class="token register variable">p0</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>eltechs<span class="token punctuation">/</span>axs<span class="token punctuation">/</span>helpers<span class="token punctuation">/</span></span><span class="token class-name">ZipInstallerObb</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token field variable">exagearImage</span><span class="token punctuation">:</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>eltechs<span class="token punctuation">/</span>axs<span class="token punctuation">/</span>ExagearImageConfiguration<span class="token punctuation">/</span></span><span class="token class-name">ExagearImage</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    invoke-virtual <span class="token punctuation">{</span><span class="token register variable">v2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>eltechs<span class="token punctuation">/</span>axs<span class="token punctuation">/</span>ExagearImageConfiguration<span class="token punctuation">/</span></span><span class="token class-name">ExagearImage</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">java<span class="token punctuation">/</span>io<span class="token punctuation">/</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token comment">#省略...</span></span>
<span class="line">    return-void</span>
<span class="line"><span class="token keyword">.end</span> <span class="token keyword">method</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>将obb放入exagear的apk中，测试可以解压obb。</li></ol><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">整体流程</p><ol><li>在apk/assets/obb/目录下放入数据包，命名无要求</li><li>导入<code>ExagearPrefs.smali</code>，该文件包含了解压obb并返回其File对象、和删除临时obb两个方法。</li><li>在<code>ZipInstallerObb.smali</code>调用这两个方法。如果有需要则提供obb的File对象，不需要则删除obb。</li></ol></div><p>具体说明：</p>`,5)),s("ol",null,[n[22]||(n[22]=s("li",null,[a("将obb数据包放入apk的assets/obb/目录下，命名无要求，注意此目录下应有且仅有一个文件。"),s("br"),a(" 如果无法在apk创建文件夹，请在外部创建obb文件夹，移入数据包后再将obb文件夹移入apk。")],-1)),s("li",null,[n[11]||(n[11]=a("打开mt管理器的dex编辑器++，在浏览界面长按任意路径，导入")),s("a",g,[n[10]||(n[10]=a("ExagearPrefs.smali")),p(t)]),n[12]||(n[12]=a("。"))]),s("li",null,[n[14]||(n[14]=a("搜索并找到")),n[15]||(n[15]=s("code",null,"ZipInstallerObb.smali",-1)),n[16]||(n[16]=a("，对比")),n[17]||(n[17]=s("a",{href:"#smali%E4%BF%AE%E6%94%B9"},"这里",-1)),n[18]||(n[18]=a("修改其中installImageFromObbIfNeeded的开头部分代码。")),n[19]||(n[19]=s("br",null,null,-1)),n[20]||(n[20]=a(" 如果手动改smali很麻烦，这里提供一份完整的")),s("a",w,[n[13]||(n[13]=a("ZipInstallerObb.smali")),p(t)]),n[21]||(n[21]=a("， 应该可以直接导入替换。但是不保证通用。"))])]),n[26]||(n[26]=s("p",null,[a("实际结果： 左侧为放在lib中的，右侧为放在assets中的，少了一个数据包的体积（300多M） "),s("img",{src:r,alt:"图1"})],-1)),n[27]||(n[27]=s("h2",{id:"总结",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#总结"},[s("span",null,"总结")])],-1)),n[28]||(n[28]=s("ol",null,[s("li",null,"将obb放入apk的assets目录下，需要时提取出来，不用了再删掉。"),s("li",null,"目前代码实现的缺点是必须要在第二次启动时才能删除obb文件。deleteOnExit只有在vm正常关闭时才会触发所以没啥用。其实可以在那个函数底下，找到obb解压完成的位置，调用一次删除obb的函数，不过懒得做了=-=")],-1))])}const y=c(d,[["render",f],["__file","index.html.vue"]]),F=JSON.parse('{"path":"/blogs/2022/summer/exagearObbInApk/","title":"将Exagear直装版数据包放到apk的assets中以减小体积安装后的占用空间","lang":"zh-CN","frontmatter":{"date":"2022-07-25 16:02","categories":["技术","exagear"],"tags":["android","dex","exagear","obb"]},"headers":[{"level":2,"title":"问题描述","slug":"问题描述","link":"#问题描述","children":[]},{"level":2,"title":"解决过程","slug":"解决过程","link":"#解决过程","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1658739287000,"updatedTime":1666354376000,"contributors":[{"name":"ewt45","email":"79033456+ewt45@users.noreply.github.com","commits":2}]},"filePathRelative":"blogs/2022/summer/exagearObbInApk/index.md"}');export{y as comp,F as data};
