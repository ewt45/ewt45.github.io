import{_ as l,a as u,b as p}from"./4-Bo5qo57t.js";import{_ as r,c as k,a as s,d as t,e as a,b as e,f as d,r as o,o as m}from"./app-lSJJfXGm.js";const v="/assets/5-CA8b5Efk.png",g={},b={class:"custom-container tip"},x={href:"https://pan.baidu.com/s/12SXyCLwy80CP3c-Py0XVEw?pwd=96qs",target:"_blank",rel:"noopener noreferrer"};function f(h,n){const i=o("RouteLink"),c=o("ExternalLinkIcon");return m(),k("div",null,[s("div",b,[n[3]||(n[3]=t('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p>',2)),s("p",null,[n[1]||(n[1]=a("本文为")),e(i,{to:"/blogs/2022/summer/exagearInitContainer/"},{default:d(()=>n[0]||(n[0]=[a("解决exagear内置容器，必须点开一次环境设置才能启动环境的问题")])),_:1}),n[2]||(n[2]=a("的分支，介绍了使用代码生成sharePrefs文件的方法。由于有些局限性，所以本文仅用于留档，建议使用移动现有sharePrefs文件的方法。"))])]),n[8]||(n[8]=t(`<h2 id="解决原理" tabindex="-1"><a class="header-anchor" href="#解决原理"><span>解决原理</span></a></h2><ul><li><p>缺失的函数为loadDefaults()，其作用为创建SharePreference文件，记录当前容器的设置信息，在创建容器时被调用。所以有两种解决方法:</p><ul><li>在初次启动时调用创建环境的代码，创建环境，这样函数就会被执行。</li><li>自己写一个sharePref</li></ul></li><li><p>这里选择后者。又有两种选择：</p><ul><li>在代码中调用原生方法写入sharepref，</li><li>也可以提前写好xml文件放入apk，然后再代码中移动文件到对应目录。</li></ul></li><li><p>我这里选择前者。其实感觉后者更方便修改一点，因为有时候需要自定义按键和分辨率。</p></li></ul><ol><li><p>整体思路</p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">整体思路</p><ul><li>编写java代码，测试通过后再转为smali，加入dex中</li><li>新建一个类，其包含一个静态方法用于创建SharePref文件，需要传入参数context。</li><li>在exagear主Activity里调用该方法，确保程序启动时即可执行。</li><li>为什么要在Activity中，而不是随便一个类中调用？因为要获取SharePref文件，所以需要用到context，而context需要从activity中获得。</li></ul></div></li><li><p>使用AndroidStudio编写代码，创建类ExagearPrefs。文件格式照着GuestContainerConfig写就行。最后写入文件用的是apply同步写入方法，可能造成anr，如果出现问题可以尝试换成commit异步写入。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>datainsert</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">SharedPreferences</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExagearPrefs</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSP</span><span class="token punctuation">(</span><span class="token class-name">Context</span> ctx<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SharedPreferences</span> sp <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token string">&quot;com.eltechs.zc.CONTAINER_CONFIG_1&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">MODE_PRIVATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//如果没获取到sp就创建一个</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>sp<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;NAME&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;NAME_NOT_FOUND&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;NAME_NOT_FOUND&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">SharedPreferences<span class="token punctuation">.</span>Editor</span> editor <span class="token operator">=</span> sp<span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//        Log.d(&quot;ExagearPrefs&quot;, &quot;setSP: &quot;+sp.getString(&quot;NAME&quot;,&quot;NAME_NOT_FOUND&quot;));</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">&quot;SCREEN_SIZE&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1024,768&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">&quot;SCREEN_COLOR_DEPTH&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;32&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">&quot;NAME&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;预设容器&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">&quot;RUN_ARGUMENTS&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">&quot;CONTROLS&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putBoolean</span><span class="token punctuation">(</span><span class="token string">&quot;HIDE_TASKBAR_SHORTCUT&quot;</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putBoolean</span><span class="token punctuation">(</span><span class="token string">&quot;DEFAULT_CONTROLS_NOT_SHORTCUT&quot;</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putBoolean</span><span class="token punctuation">(</span><span class="token string">&quot;DEFAULT_RESOLUTION_NOT_SHORTCUT&quot;</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">&quot;STARTUP_ACTIONS&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">&quot;RUN_GUIDE&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putBoolean</span><span class="token punctuation">(</span><span class="token string">&quot;RUN_GUIDE_SHOWN&quot;</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">&quot;CREATED_BY&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;补补23456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//用这个检测存不存在吧</span></span>
<span class="line"></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//同步写入，commit是异步写入</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;ExagearPrefs&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;setSP: sp已存在，跳过写入&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在主Activity中调用：<code>ExagearPrefs.setSP(getApplicationContext());</code>。</p></li><li><p>构建项目并在虚拟机中运行，发现可以正常创建SharePref文件。 <img src="`+l+'" alt="图2"></p></li><li><p>使用插件将java转为smali，并导入exagear的dex。<br> ExagearPrefs类的导入：进入mt管理器的dex编辑器++，在浏览界面随便长按一个路径然后点击导入，选择smali文件导入。 <img src="'+u+`" alt="图3"></p></li><li><p>调用ExagearPrefs代码的导入：将MainActivity也转为smali，找到调用ExgearPrefs的那一行代码。 <strong>注意这个代码不能直接用。第一行代码为获取<code>Lcom/example/datainsert/MainActivity</code>的Context，而在Exagear中应该获取它自己的某个Activity的context，所以我们现在需要将<code>Lcom/example/datainsert/MainActivity</code>修改为Exagear某个类的路径，然后放入这个类的OnCreate方法中（Activity生命周期从OnCreate开始）。要求为：必须是Activity，而且在Exagear启动时越早被调用越好。</strong></p><div class="language-smali line-numbers-mode" data-highlighter="prismjs" data-ext="smali" data-title="smali"><pre><code><span class="line"><span class="token comment">#主Activity中调用函数的代码</span></span>
<span class="line">invoke-virtual <span class="token punctuation">{</span><span class="token register variable">p0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>example<span class="token punctuation">/</span>datainsert<span class="token punctuation">/</span></span><span class="token class-name">MainActivity</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">android<span class="token punctuation">/</span>content<span class="token punctuation">/</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">move-result-object <span class="token register variable">v1</span></span>
<span class="line"></span>
<span class="line">invoke-static <span class="token punctuation">{</span><span class="token register variable">v1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>example<span class="token punctuation">/</span>datainsert<span class="token punctuation">/</span></span><span class="token class-name">ExagearPrefs</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token function">setSP</span><span class="token punctuation">(</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">android<span class="token punctuation">/</span>content<span class="token punctuation">/</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token builtin">V</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>寻找我们需要的Activity的方法：（以暗黑直装版为例）打开mt管理器左侧栏-Activity记录，然后启动Exagear，发现第一个启动的类为EDStartupActivity，决定就是它了。所以将第一行的代码对应类名改为Lcom/eltechs/ed/activities/EDStartUpActivity，然后放入EDStartUpActivity的initialiseStartupActions()方法的结尾（恩这个类里没有OnCreate，观察它仅有的几个函数就这个最像初始化函数了）</p><div class="language-smali line-numbers-mode" data-highlighter="prismjs" data-ext="smali" data-title="smali"><pre><code><span class="line"><span class="token comment">#放入EDStartupActivity中initialiseStartupActions()结尾的代码</span></span>
<span class="line">invoke-virtual <span class="token punctuation">{</span><span class="token register variable">p0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>eltechs<span class="token punctuation">/</span>ed<span class="token punctuation">/</span>activities<span class="token punctuation">/</span></span><span class="token class-name">EDStartupActivity</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">android<span class="token punctuation">/</span>content<span class="token punctuation">/</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">move-result-object <span class="token register variable">v1</span></span>
<span class="line"></span>
<span class="line">invoke-static <span class="token punctuation">{</span><span class="token register variable">v1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token builtin">L</span><span class="token namespace">com<span class="token punctuation">/</span>example<span class="token punctuation">/</span>datainsert<span class="token punctuation">/</span></span><span class="token class-name">ExagearPrefs</span></span><span class="token punctuation">;</span><span class="token operator">-&gt;</span><span class="token function">setSP</span><span class="token punctuation">(</span><span class="token class-name"><span class="token builtin">L</span><span class="token namespace">android<span class="token punctuation">/</span>content<span class="token punctuation">/</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token builtin">V</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+p+'" alt="图4"></p></li><li><p>重新编译dex，apk签名并重装，打开测试，发现不用点开设置也能启动内置环境了，成功。</p></li></ol><h2 id="解决实操" tabindex="-1"><a class="header-anchor" href="#解决实操"><span>解决实操</span></a></h2><p>本节和 解决原理 后半部分大致相同，省略了解释原理的部分。<br> 整体思路：分两步，新建一个类用于创建SharePref文件，然后在主Activity中调用这个类。</p>',5)),s("ol",null,[s("li",null,[s("p",null,[n[5]||(n[5]=a("打开mt管理器的dex编辑器++，在浏览界面长按任意路径，导入")),s("a",x,[n[4]||(n[4]=a("ExagearPrefs.smali")),e(c)]),n[6]||(n[6]=a("。该smali用于生成内置环境的设置信息："))]),n[7]||(n[7]=t('<div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">WARNING</p><p>目前的配置还不够全，有些没配置的选项，比如图形渲染等，正在完善中。。。</p></div>',1))])]),n[9]||(n[9]=t('<ul><li>（必看！！）25行的com.eltechs.zc这个包名需要根据实际情况修改，否则无法生效。在mt的dex编辑器++中搜索<code>CONTAINER_CONFIG_FILE_KEY_PREFIX</code>，查看其对应的字符串前半部分的包名，以这个包名为准。如图中的为<code>com.eltechs.zc</code>,那么25行的字符串就应该是<code>com.eltechs.zc.CONTAINER_CONFIG_1</code><br><img src="'+v+'" alt="图5"></li><li>58行是分辨率，默认为default，或者其他支持的分辨率，宽高用逗号隔开</li><li>65行是色深</li><li>72行是环境名称</li><li>86行是操作模式，默认为default，或者com.eltechs.ed.controls包里对应操作的类中getId()返回的字符串</li></ul><ol start="2"><li>使用mt管理器左侧栏的activity记录功能，查看Exagear启动时第一个启动的Activity名字。以图中为例，第一个打开的为com.eltechs.ed.activities.EDStartupActivity <img src="'+p+'" alt="图4"></li><li>将下面三行代码添加到刚才找到的Activity的OnCreate方法的末尾处。</li></ol><ul><li><p>注意第一行代码中的com/eltechs/ed/activities/EDStartupActivity改成刚才找到的Activity名字，点.换成斜线/。</p></li><li><p>我找的这个EDStartupActivity没有OnCreate，只有一个initialiseStartupActions，把它当OnCreate就行。</p><p>invoke-virtual {p0}, Lcom/eltechs/ed/activities/EDStartupActivity;-&gt;getApplicationContext()Landroid/content/Context;</p><p>move-result-object v1</p><p>invoke-static {v1}, Lcom/example/datainsert/ExagearPrefs;-&gt;setSP(Landroid/content/Context;)V</p></li></ul><ol start="4"><li>编译，重装，测试。</li></ol>',4))])}const S=r(g,[["render",f],["__file","detailed.html.vue"]]),A=JSON.parse('{"path":"/blogs/2022/summer/exagearInitContainer/detailed.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"解决原理","slug":"解决原理","link":"#解决原理","children":[]},{"level":2,"title":"解决实操","slug":"解决实操","link":"#解决实操","children":[]}],"git":{"createdTime":1658556184000,"updatedTime":1660119879000,"contributors":[{"name":"ewt45","email":"79033456+ewt45@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/2022/summer/exagearInitContainer/detailed.md"}');export{S as comp,A as data};
